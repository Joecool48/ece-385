--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=22 LPM_WIDTH=5 data enable eq
--VERSION_BEGIN 18.1 cbx_cycloneii 2018:09:12:13:04:09:SJ cbx_lpm_add_sub 2018:09:12:13:04:09:SJ cbx_lpm_compare 2018:09:12:13:04:09:SJ cbx_lpm_decode 2018:09:12:13:04:09:SJ cbx_mgl 2018:09:12:14:15:07:SJ cbx_nadder 2018:09:12:13:04:09:SJ cbx_stratix 2018:09:12:13:04:09:SJ cbx_stratixii 2018:09:12:13:04:09:SJ  VERSION_END


-- Copyright (C) 2018  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_9ua
( 
	data[4..0]	:	input;
	enable	:	input;
	eq[21..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[21..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode323w[2..0]	: WIRE;
	w_anode336w[3..0]	: WIRE;
	w_anode353w[3..0]	: WIRE;
	w_anode363w[3..0]	: WIRE;
	w_anode373w[3..0]	: WIRE;
	w_anode383w[3..0]	: WIRE;
	w_anode393w[3..0]	: WIRE;
	w_anode403w[3..0]	: WIRE;
	w_anode413w[3..0]	: WIRE;
	w_anode425w[2..0]	: WIRE;
	w_anode434w[3..0]	: WIRE;
	w_anode445w[3..0]	: WIRE;
	w_anode455w[3..0]	: WIRE;
	w_anode465w[3..0]	: WIRE;
	w_anode475w[3..0]	: WIRE;
	w_anode485w[3..0]	: WIRE;
	w_anode495w[3..0]	: WIRE;
	w_anode505w[3..0]	: WIRE;
	w_anode516w[2..0]	: WIRE;
	w_anode525w[3..0]	: WIRE;
	w_anode536w[3..0]	: WIRE;
	w_anode546w[3..0]	: WIRE;
	w_anode556w[3..0]	: WIRE;
	w_anode566w[3..0]	: WIRE;
	w_anode576w[3..0]	: WIRE;
	w_anode586w[3..0]	: WIRE;
	w_anode596w[3..0]	: WIRE;
	w_anode607w[2..0]	: WIRE;
	w_anode616w[3..0]	: WIRE;
	w_anode627w[3..0]	: WIRE;
	w_anode637w[3..0]	: WIRE;
	w_anode647w[3..0]	: WIRE;
	w_anode657w[3..0]	: WIRE;
	w_anode667w[3..0]	: WIRE;
	w_anode677w[3..0]	: WIRE;
	w_anode687w[3..0]	: WIRE;
	w_data321w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[21..0] = eq_wire[21..0];
	eq_wire[] = ( ( w_anode687w[3..3], w_anode677w[3..3], w_anode667w[3..3], w_anode657w[3..3], w_anode647w[3..3], w_anode637w[3..3], w_anode627w[3..3], w_anode616w[3..3]), ( w_anode596w[3..3], w_anode586w[3..3], w_anode576w[3..3], w_anode566w[3..3], w_anode556w[3..3], w_anode546w[3..3], w_anode536w[3..3], w_anode525w[3..3]), ( w_anode505w[3..3], w_anode495w[3..3], w_anode485w[3..3], w_anode475w[3..3], w_anode465w[3..3], w_anode455w[3..3], w_anode445w[3..3], w_anode434w[3..3]), ( w_anode413w[3..3], w_anode403w[3..3], w_anode393w[3..3], w_anode383w[3..3], w_anode373w[3..3], w_anode363w[3..3], w_anode353w[3..3], w_anode336w[3..3]));
	w_anode323w[] = ( (w_anode323w[1..1] & (! data_wire[4..4])), (w_anode323w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode336w[] = ( (w_anode336w[2..2] & (! w_data321w[2..2])), (w_anode336w[1..1] & (! w_data321w[1..1])), (w_anode336w[0..0] & (! w_data321w[0..0])), w_anode323w[2..2]);
	w_anode353w[] = ( (w_anode353w[2..2] & (! w_data321w[2..2])), (w_anode353w[1..1] & (! w_data321w[1..1])), (w_anode353w[0..0] & w_data321w[0..0]), w_anode323w[2..2]);
	w_anode363w[] = ( (w_anode363w[2..2] & (! w_data321w[2..2])), (w_anode363w[1..1] & w_data321w[1..1]), (w_anode363w[0..0] & (! w_data321w[0..0])), w_anode323w[2..2]);
	w_anode373w[] = ( (w_anode373w[2..2] & (! w_data321w[2..2])), (w_anode373w[1..1] & w_data321w[1..1]), (w_anode373w[0..0] & w_data321w[0..0]), w_anode323w[2..2]);
	w_anode383w[] = ( (w_anode383w[2..2] & w_data321w[2..2]), (w_anode383w[1..1] & (! w_data321w[1..1])), (w_anode383w[0..0] & (! w_data321w[0..0])), w_anode323w[2..2]);
	w_anode393w[] = ( (w_anode393w[2..2] & w_data321w[2..2]), (w_anode393w[1..1] & (! w_data321w[1..1])), (w_anode393w[0..0] & w_data321w[0..0]), w_anode323w[2..2]);
	w_anode403w[] = ( (w_anode403w[2..2] & w_data321w[2..2]), (w_anode403w[1..1] & w_data321w[1..1]), (w_anode403w[0..0] & (! w_data321w[0..0])), w_anode323w[2..2]);
	w_anode413w[] = ( (w_anode413w[2..2] & w_data321w[2..2]), (w_anode413w[1..1] & w_data321w[1..1]), (w_anode413w[0..0] & w_data321w[0..0]), w_anode323w[2..2]);
	w_anode425w[] = ( (w_anode425w[1..1] & (! data_wire[4..4])), (w_anode425w[0..0] & data_wire[3..3]), enable_wire);
	w_anode434w[] = ( (w_anode434w[2..2] & (! w_data321w[2..2])), (w_anode434w[1..1] & (! w_data321w[1..1])), (w_anode434w[0..0] & (! w_data321w[0..0])), w_anode425w[2..2]);
	w_anode445w[] = ( (w_anode445w[2..2] & (! w_data321w[2..2])), (w_anode445w[1..1] & (! w_data321w[1..1])), (w_anode445w[0..0] & w_data321w[0..0]), w_anode425w[2..2]);
	w_anode455w[] = ( (w_anode455w[2..2] & (! w_data321w[2..2])), (w_anode455w[1..1] & w_data321w[1..1]), (w_anode455w[0..0] & (! w_data321w[0..0])), w_anode425w[2..2]);
	w_anode465w[] = ( (w_anode465w[2..2] & (! w_data321w[2..2])), (w_anode465w[1..1] & w_data321w[1..1]), (w_anode465w[0..0] & w_data321w[0..0]), w_anode425w[2..2]);
	w_anode475w[] = ( (w_anode475w[2..2] & w_data321w[2..2]), (w_anode475w[1..1] & (! w_data321w[1..1])), (w_anode475w[0..0] & (! w_data321w[0..0])), w_anode425w[2..2]);
	w_anode485w[] = ( (w_anode485w[2..2] & w_data321w[2..2]), (w_anode485w[1..1] & (! w_data321w[1..1])), (w_anode485w[0..0] & w_data321w[0..0]), w_anode425w[2..2]);
	w_anode495w[] = ( (w_anode495w[2..2] & w_data321w[2..2]), (w_anode495w[1..1] & w_data321w[1..1]), (w_anode495w[0..0] & (! w_data321w[0..0])), w_anode425w[2..2]);
	w_anode505w[] = ( (w_anode505w[2..2] & w_data321w[2..2]), (w_anode505w[1..1] & w_data321w[1..1]), (w_anode505w[0..0] & w_data321w[0..0]), w_anode425w[2..2]);
	w_anode516w[] = ( (w_anode516w[1..1] & data_wire[4..4]), (w_anode516w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode525w[] = ( (w_anode525w[2..2] & (! w_data321w[2..2])), (w_anode525w[1..1] & (! w_data321w[1..1])), (w_anode525w[0..0] & (! w_data321w[0..0])), w_anode516w[2..2]);
	w_anode536w[] = ( (w_anode536w[2..2] & (! w_data321w[2..2])), (w_anode536w[1..1] & (! w_data321w[1..1])), (w_anode536w[0..0] & w_data321w[0..0]), w_anode516w[2..2]);
	w_anode546w[] = ( (w_anode546w[2..2] & (! w_data321w[2..2])), (w_anode546w[1..1] & w_data321w[1..1]), (w_anode546w[0..0] & (! w_data321w[0..0])), w_anode516w[2..2]);
	w_anode556w[] = ( (w_anode556w[2..2] & (! w_data321w[2..2])), (w_anode556w[1..1] & w_data321w[1..1]), (w_anode556w[0..0] & w_data321w[0..0]), w_anode516w[2..2]);
	w_anode566w[] = ( (w_anode566w[2..2] & w_data321w[2..2]), (w_anode566w[1..1] & (! w_data321w[1..1])), (w_anode566w[0..0] & (! w_data321w[0..0])), w_anode516w[2..2]);
	w_anode576w[] = ( (w_anode576w[2..2] & w_data321w[2..2]), (w_anode576w[1..1] & (! w_data321w[1..1])), (w_anode576w[0..0] & w_data321w[0..0]), w_anode516w[2..2]);
	w_anode586w[] = ( (w_anode586w[2..2] & w_data321w[2..2]), (w_anode586w[1..1] & w_data321w[1..1]), (w_anode586w[0..0] & (! w_data321w[0..0])), w_anode516w[2..2]);
	w_anode596w[] = ( (w_anode596w[2..2] & w_data321w[2..2]), (w_anode596w[1..1] & w_data321w[1..1]), (w_anode596w[0..0] & w_data321w[0..0]), w_anode516w[2..2]);
	w_anode607w[] = ( (w_anode607w[1..1] & data_wire[4..4]), (w_anode607w[0..0] & data_wire[3..3]), enable_wire);
	w_anode616w[] = ( (w_anode616w[2..2] & (! w_data321w[2..2])), (w_anode616w[1..1] & (! w_data321w[1..1])), (w_anode616w[0..0] & (! w_data321w[0..0])), w_anode607w[2..2]);
	w_anode627w[] = ( (w_anode627w[2..2] & (! w_data321w[2..2])), (w_anode627w[1..1] & (! w_data321w[1..1])), (w_anode627w[0..0] & w_data321w[0..0]), w_anode607w[2..2]);
	w_anode637w[] = ( (w_anode637w[2..2] & (! w_data321w[2..2])), (w_anode637w[1..1] & w_data321w[1..1]), (w_anode637w[0..0] & (! w_data321w[0..0])), w_anode607w[2..2]);
	w_anode647w[] = ( (w_anode647w[2..2] & (! w_data321w[2..2])), (w_anode647w[1..1] & w_data321w[1..1]), (w_anode647w[0..0] & w_data321w[0..0]), w_anode607w[2..2]);
	w_anode657w[] = ( (w_anode657w[2..2] & w_data321w[2..2]), (w_anode657w[1..1] & (! w_data321w[1..1])), (w_anode657w[0..0] & (! w_data321w[0..0])), w_anode607w[2..2]);
	w_anode667w[] = ( (w_anode667w[2..2] & w_data321w[2..2]), (w_anode667w[1..1] & (! w_data321w[1..1])), (w_anode667w[0..0] & w_data321w[0..0]), w_anode607w[2..2]);
	w_anode677w[] = ( (w_anode677w[2..2] & w_data321w[2..2]), (w_anode677w[1..1] & w_data321w[1..1]), (w_anode677w[0..0] & (! w_data321w[0..0])), w_anode607w[2..2]);
	w_anode687w[] = ( (w_anode687w[2..2] & w_data321w[2..2]), (w_anode687w[1..1] & w_data321w[1..1]), (w_anode687w[0..0] & w_data321w[0..0]), w_anode607w[2..2]);
	w_data321w[2..0] = data_wire[2..0];
END;
--VALID FILE
