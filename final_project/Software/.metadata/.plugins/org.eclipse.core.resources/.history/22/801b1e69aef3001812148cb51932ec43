/*
 * colliders.cpp
 *
 *  Created on: Nov 29, 2018
 *      Author: joey
 */
#include "colliders.h"

Collidable::Collidable(uint16_t collide_id, uint16_t collide_x, uint16_t collide_y) : collide_id(collide_id), collide_x(collide_x), collide_y(collide_y) {}

Rect_Collider::Rect_Collider(uint16_t collide_id, uint16_t collide_x, uint16_t collide_y, uint16_t collide_width, uint16_t collide_height) : collide_id(collide_id), collide_x(collide_x), collide-y(collide_y), collide_width(collide_width), collide_height(collide_height)  {

/*
 * Returns true if the two rect colliders collide, otherwise false
 */
bool Rect_Collider::collides_with(Rect_Collider & other) {
	return (collide_x + collide_width >= other.collide_x && collide_x <= other.collide_x + other.collide_width &&
			collide_y + collide_height >= other.collide_y && collide_y <= other.collide_y + other.collide_height);
}
/*
 * Determines whether the one collider is on top of the other.
 * For detecting whether Mario jumped on a enemy
 */
bool Rect_Collider::collides_above(Rect_Collider & other) {
	return (collides_with(other) && (collide_x + collide_width / 2 >= other.collide_x || collide_x >= other.collide_x + other.collide_width / 2)
			&& collide_y + collide_height < other.collide_y + other.collide_height / 2);
}

/*
 * Determines whether the one collider is on left of the other.
 * For detecting whether Mario jumped on a enemy
 */
bool Rect_Collider::collides_left(Rect_Collider & other) {
	// fix
	return (collides_with(other) && collide_x + collide_width / 2 >= other.collide_x
			&& collide_y + collide_height < other.collide_y + other.collide_height / 2);
}

/*
 * Determines whether the one collider is on right of the other.
 * For detecting whether Mario jumped on a enemy
 */
bool Rect_Collider::collides_right(Rect_Collider & other) {
	return true;
}

/*
 * Determines whether the one collider is on down of the other.
 * For detecting whether Mario jumped on a enemy
 */
bool Rect_Collider::collides_below(Rect_Collider & other) {
	return true;
}


