/*
 * player.h
 *
 *  Created on: Dec 1, 2018
 *      Author: joey
 */

#ifndef INCLUDE_PLAYER_H_
#define INCLUDE_PLAYER_H_
#include "sprite_animator.h"
#include "config.h"
#include "keyboard.h"
// Represents a playable character
class Player : Sprite_Animator {
	const float MAX_WALK_SPEED = 1; // Max amount that can be added per frame
	const float WALK_ACCEL = .1;
	const float JUMP_MOVE_SPEED = .05;
	Rect_Collider player_collider;
	enum modes {NORMAL_MODE = 0, MINI_MODE, FIRE_MODE, INVINCIBLE_MODE}; // Mario power up states
	enum states {IDLE = 0, WALKING, JUMPING, CROUCHING, SHRINKING, FLAGDOWN, ENLARGING, FLIPPING, DYING, THROWFIREBALL, SLIDING};
	float accelX, accelY;
	float velX, velY;
	bool enablePlayerControl;
	bool enemyCanKill;
	bool canMove; // Set to false if you cant move due to pressing multiple keys
	bool isFacingLeft; // Set to true if facing left
	Player();
	void animatorSetup(); // Initialize all the animation states of the sprite
	void draw(); // function to draw player. Called AFTER update
	void update(); // player state machine
	bool isInAir(); // Function for if Mario is in  midair
	Keyboard keyboard;
	Key getKey();
	void idleState();
	void walkingState();
	void jumpingState();
	void shrinkingState();
	void crouchingState();
	void dyingState();
	void flippingState();
	void enlargingState();
	void flagdownState();
	void throwfireballState();
	void slidingState();
	bool isEnemy(Collider_Id sprite_id);
	bool hitByEnemy();
	bool getsMushroom();
	bool getsFireflower();

};



#endif /* INCLUDE_PLAYER_H_ */
