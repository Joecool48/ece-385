/*
 * sprite.cpp
 *
 *  Created on: Dec 1, 2018
 *      Author: joey
 */
#include "../include/sprite.h"
#include <iostream>
#include <string>
#include "../include/sim.h"
using namespace std;

/* TODO: Make function warn when it is drawing out of range
 * Draws a sprite at a specified location by placing it in memory
 */
void Sprite::drawSprite(uint16_t xx, uint16_t yy, uint8_t flip_mode, bool isVis) {
	if (isVis) {
		*SPRITE_X_PIO = xx;
		Sim::sprite_x_file.seekp(0, ios_base::beg);
		Sim::sprite_x_file << xx << std::flush;
		*SPRITE_Y_PIO = yy;
		Sim::sprite_y_file.seekp(0, ios_base::beg);
		Sim::sprite_y_file << yy << std::flush;
		*SPRITE_ADDRESS_PIO = start_address;
		Sim::sprite_address_file.seekp(0, ios_base::beg);
		Sim::sprite_address_file << start_address << std::flush;
		*SPRITE_WIDTH_PIO = width;
		Sim::sprite_width_file.seekp(0, ios_base::beg);
		Sim::sprite_width_file << width << std::flush;
		*SPRITE_HEIGHT_PIO = height;
		Sim::sprite_height_file.seekp(0, ios_base::beg);
		Sim::sprite_height_file << height << std::flush;
		*SPRITE_FLIP_MODE_PIO = flip_mode;
		Sim::sprite_flip_mode_file.seekp(0, ios_base::beg);
		Sim::sprite_flip_mode_file << flip_mode << std::flush;
		*SPRITE_ID_PIO = (*SPRITE_ID_PIO) + 1;
		Sim::sprite_id_file.seekp(0, ios_base::beg);
		Sim::sprite_id_file << *SPRITE_ID_PIO << std::flush;
		std::cout << "Sprite x " << *SPRITE_X_PIO << std::endl;
		std::cout << "Sprite y " << *SPRITE_Y_PIO << std::endl;
		std::cout << "Sprite width " << *SPRITE_WIDTH_PIO << std::endl;
		std::cout << "Sprite height " << *SPRITE_HEIGHT_PIO << std::endl;
		std::cout << "Sprite address " << *SPRITE_ADDRESS_PIO << std::endl;
		std::cout << "Sprite ID " << *SPRITE_ID_PIO << std::endl;
	}
	else {
		std::cout << "Sprite at " << xx << ", " << yy << " is not visible" << std::endl;
	}
}
Sprite::Sprite() {
	width = 0;
	height = 0;
	start_address = 0;
}

Sprite::Sprite(uint16_t width, uint16_t height, uint32_t address) {
	this->width = width;
	this->height = height;
	this->start_address = address;
}

uint16_t Sprite::sprite_x = 0, Sprite::sprite_y = 0, Sprite::sprite_width = 0, Sprite::sprite_height = 0, Sprite::sprite_id = 0;
uint32_t Sprite::sprite_address = 0;
uint8_t Sprite::sprite_flip_mode = 0;
uint8_t Sprite::hardware_done = 0, Sprite::software_done = 0;



